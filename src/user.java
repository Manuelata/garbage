/**   Create username and password methods and functionality that checks whether the username is taken*   and if the password has valid symbols */import javax.swing.*;import java.util.ArrayList;public class user {    private String firstName , lastName, username, password;    ArrayList<user> users = new ArrayList<>();    // Constructor    public user(String firstName, String lastName , String username, String password){        this.firstName = firstName;        this.lastName = lastName;        this.username = username;        this.password= password;    }    public String setFirstName(){        String firstName = JOptionPane.showInputDialog(null, "Enter first name");        if(!validName(firstName))            setFirstName();        return firstName;    }    public String setLastName(){        String lastName = JOptionPane.showInputDialog(null, "Enter your last name");        if(!validName(lastName))            setLastName();        return lastName;    }    public boolean validName(String firstName){        for(int i = 0; i < firstName.length(); i++){            if (firstName.contains(" "))                return false;        }        return true;    }    /*createNewUser is broken*/    //          createNewUser()    public static user createNewUser(){        String firstName = JOptionPane.showInputDialog(null, "Enter first name");        if (firstName = false) {            setFirst        }        users.add(newUser);        return newUser;    }    public String setPassword() {        String password = JOptionPane.showInputDialog(null, "Enter a valid password.Must have numbers and allowed symobls: " +                "@ , # , $ , % , ^ , & , * , ( , ) ");        if(!validPassword(password))            setPassword();        return password;    }    private boolean validPassword(String password) {        String[] allowedSymbols = { "@", "#" , "$" , "%" , "^" , "&" , "*" , "(" , ")" ,                "1" , "2", "3", "4", "5" , "6" , "7" , "8" , "9" , "0" } ;        for(String allowed: allowedSymbols){            if(!password.contains(allowed))                return false;        }        return true;    }    //    public String setUsername(){        String username = JOptionPane.showInputDialog(null, "Enter a username.");        return username;    }    //    public boolean usernameChecker(String username){        String[] forbiddenSymbols = {"@", "^" , "*" , "(" , ")" , "=" , "+"};        for (String forbidden: forbiddenSymbols) {            if(username.contains(forbidden)){                return false;            }        }        return true;    }    public static void main(String[] args) {        user su = new user(null, null , null , null);        su.createNewUser();    }}